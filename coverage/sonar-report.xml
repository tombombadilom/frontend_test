<testExecutions version="1">
  <file path="src/components/auth/__tests__/protected-route.test.tsx">
    <testCase name="ProtectedRoute - shows loading state when authentication is loading" duration="30" />
    <testCase name="ProtectedRoute - redirects to login when user is not authenticated" duration="8" />
    <testCase name="ProtectedRoute - renders children when user is authenticated" duration="3" />
    <testCase name="ProtectedRoute - redirects to home when user is not admin" duration="3" />
    <testCase name="ProtectedRoute - renders admin content when user is admin" duration="2" />
  </file>
  <file path="src/components/dashboard/___tests___/KPIGrid.test.tsx">
    <testCase name="KPIGrid - renders loading state initially" duration="74" />
    <testCase name="KPIGrid - renders KPI cards with provided data" duration="25" />
    <testCase name="KPIGrid - applies custom className when provided" duration="23" />
    <testCase name="KPIGrid - displays correct trend icons and colors" duration="8" />
  </file>
  <file path="src/components/dashboard/__tests__/KPIGrid.test.tsx">
    <testCase name="KPIGrid - renders loading state initially" duration="98" />
    <testCase name="KPIGrid - renders KPI cards with provided data" duration="133" />
    <testCase name="KPIGrid - applies custom class names correctly" duration="15" />
    <testCase name="KPIGrid - shows correct trend icons and colors" duration="72" />
  </file>
  <file path="src/components/games/__tests__/game-card.test.tsx">
    <testCase name="GameCard - renders game information correctly" duration="82" />
    <testCase name="GameCard - adds game to cart when clicking add to cart button" duration="129" />
    <testCase name="GameCard - adds game to wishlist when clicking wishlist button" duration="32" />
    <testCase name="GameCard - removes game from wishlist when clicking wishlist button again" duration="25" />
    <testCase name="GameCard - adds game to recently viewed when clicking game link" duration="25" />
    <testCase name="GameCard - renders game without discount correctly" duration="26" />
  </file>
  <file path="src/components/shared/__tests__/animated-button.test.tsx">
    <testCase name="AnimatedButton - renders children correctly" duration="66" />
    <testCase name="AnimatedButton - passes props to Button component" duration="113" />
    <testCase name="AnimatedButton - handles click events" duration="12" />
  </file>
  <file path="src/components/shared/__tests__/animated-card.test.tsx">
    <testCase name="AnimatedCard - renders children correctly" duration="42" />
    <testCase name="AnimatedCard - applies custom className" duration="5" />
    <testCase name="AnimatedCard - applies default classes" duration="4" />
  </file>
  <file path="src/components/shared/__tests__/animated-scroll-to-top.test.tsx">
    <testCase name="AnimatedScrollToTop - is hidden at the top of the page" duration="27" />
    <testCase name="AnimatedScrollToTop - becomes visible when scrolled beyond threshold" duration="147" />
    <testCase name="AnimatedScrollToTop - scrolls to top when clicked" duration="20" />
    <testCase name="AnimatedScrollToTop - respects custom threshold" duration="19" />
  </file>
  <file path="src/components/shared/__tests__/animations.test.tsx">
    <testCase name="Animation Components - renders FadeIn component" duration="29" />
    <testCase name="Animation Components - renders FadeInOut component" duration="11" />
  </file>
  <file path="src/components/shared/__tests__/page-transition.test.tsx">
    <testCase name="PageTransition - renders children correctly" duration="65" />
    <testCase name="PageTransition - applies custom className" duration="6" />
  </file>
  <file path="src/components/shared/__tests__/sortable-list-item.test.tsx">
    <testCase name="SortableListItem - renders with content" duration="73" />
    <testCase name="SortableListItem - renders with drag handle" duration="12" />
  </file>
  <file path="src/components/shared/__tests__/sortable-list.test.tsx">
    <testCase name="SortableList - affiche les éléments" duration="35" />
  </file>
  <file path="src/components/theme/__tests__/ModeToggle.test.tsx">
    <testCase name="ModeToggle - renders the toggle button" duration="179" />
    <testCase name="ModeToggle - toggles from light to dark theme when clicked" duration="168" />
    <testCase name="ModeToggle - toggles from dark to light theme when clicked" duration="101" />
    <testCase name="ModeToggle - toggles from system to light theme when clicked" duration="103" />
  </file>
  <file path="src/components/theme/__tests__/ThemeProvider.test.tsx">
    <testCase name="ThemeProvider - affiche le contenu" duration="46" />
    <testCase name="ThemeProvider - applique le thème clair par défaut" duration="6" />
    <testCase name="ThemeProvider - applique le thème sombre" duration="5" />
  </file>
  <file path="src/components/ui/__tests__/sortable-list-item.test.tsx">
    <testCase name="SortableListItem - affiche le contenu" duration="31" />
  </file>
  <file path="src/components/ui/__tests__/sortable-list.test.tsx">
    <testCase name="SortableList - affiche les éléments" duration="77" />
    <testCase name="SortableList - applique la classe CSS" duration="11" />
    <testCase name="SortableList - utilise la fonction de rendu" duration="16" />
  </file>
  <file path="src/context/__tests__/theme-context.test.tsx">
    <testCase name="ThemeProvider - should use default theme when no localStorage value" duration="44" />
    <testCase name="ThemeProvider - should use theme from localStorage" duration="6" />
    <testCase name="ThemeProvider - should change theme when setTheme is called" duration="13" />
    <testCase name="ThemeProvider - should apply system theme when theme is system" duration="3" />
  </file>
  <file path="src/hooks/__tests__/use-auth.test.tsx">
    <testCase name="useAuth hook - should return initial state" duration="42" />
    <testCase name="useAuth hook - should login user successfully" duration="1014" />
    <testCase name="useAuth hook - should set admin role for admin emails" duration="1005" />
    <testCase name="useAuth hook - should logout user" duration="1011" />
  </file>
  <file path="src/hooks/__tests__/use-filters.test.tsx">
    <testCase name="useFilters hook - should handle basic filtering operations" duration="40" />
    <testCase name="useFilters hook - should handle price and discount filtering" duration="12" />
    <testCase name="useFilters hook - should handle sorting operations" duration="9" />
    <testCase name="useFilters hook - should handle multiple filters simultaneously" duration="14" />
    <testCase name="useFilters hook - filters games by category" duration="6" />
  </file>
  <file path="src/hooks/__tests__/use-games.test.tsx">
    <testCase name="useGames hook - should return loading state initially" duration="24" />
    <testCase name="useGames hook - should load games and set loading to false" duration="65" />
    <testCase name="useGames hook - should filter featured and new release games" duration="57" />
  </file>
  <file path="src/hooks/__tests__/use-objects.test.tsx">
    <testCase name="useObjects hook - should return loading state initially" duration="24" />
    <testCase name="useObjects hook - should load objects and set loading to false" duration="5" />
    <testCase name="useObjects hook - should add a new object" duration="6" />
    <testCase name="useObjects hook - should update an existing object" duration="5" />
    <testCase name="useObjects hook - should delete an object" duration="3" />
    <testCase name="useObjects hook - should handle errors during loading" duration="55" />
  </file>
  <file path="src/hooks/__tests__/use-settings.test.ts">
    <testCase name="useSettings hook - should handle basic settings operations" duration="21" />
    <testCase name="useSettings hook - should handle notification settings" duration="4" />
    <testCase name="useSettings hook - should handle currency formatting and settings reset" duration="10" />
  </file>
  <file path="src/hooks/__tests__/use-wishlist.test.ts">
    <testCase name="useWishlist hook - should handle adding and removing items" duration="22" />
    <testCase name="useWishlist hook - should handle duplicate items and wishlist state" duration="5" />
    <testCase name="useWishlist hook - should handle wishlist clearing" duration="3" />
  </file>
  <file path="src/pages/admin/__tests__/AdminPage.test.tsx">
    <testCase name="AdminPage - affiche le titre de la page" duration="21" />
    <testCase name="AdminPage - affiche le bouton de déconnexion" duration="55" />
    <testCase name="AdminPage - appelle logout lors du clic sur déconnexion" duration="10" />
  </file>
  <file path="src/pages/admin/__tests__/categories.test.tsx">
    <testCase name="CategoriesPage - renders the categories page" duration="200" />
    <testCase name="CategoriesPage - adds a new category" duration="498" />
    <testCase name="CategoriesPage - deletes a category" duration="291" />
  </file>
  <file path="src/pages/admin/__tests__/game-form.test.tsx">
    <testCase name="GameFormPage - renders the create form correctly" duration="293" />
    <testCase name="GameFormPage - validates required fields" duration="182" />
  </file>
  <file path="src/pages/admin/__tests__/object-form.test.tsx">
    <testCase name="ObjectFormPage - renders the create form correctly" duration="376" />
    <testCase name="ObjectFormPage - validates required fields" duration="201" />
  </file>
  <file path="src/pages/admin/__tests__/pack-form.test.tsx">
    <testCase name="PackFormPage - renders the create form correctly" duration="369" />
    <testCase name="PackFormPage - validates required fields" duration="198" />
  </file>
  <file path="src/pages/admin/__tests__/products.test.tsx">
    <testCase name="AdminProductsPage - renders loading state initially" duration="115" />
    <testCase name="AdminProductsPage - renders products after loading" duration="94" />
    <testCase name="AdminProductsPage - filters products by search query" duration="69" />
    <testCase name="AdminProductsPage - deletes a product" duration="238" />
  </file>
  <file path="src/pages/auth/__tests__/LoginPage.test.tsx">
    <testCase name="LoginPage - affiche le titre" duration="84" />
    <testCase name="LoginPage - affiche le formulaire" duration="29" />
    <testCase name="LoginPage - affiche le bouton" duration="10" />
  </file>
  <file path="src/pages/auth/__tests__/RegisterPage.test.tsx">
    <testCase name="RegisterPage - affiche le titre" duration="90" />
    <testCase name="RegisterPage - affiche le formulaire" duration="30" />
    <testCase name="RegisterPage - affiche le bouton" duration="14" />
  </file>
  <file path="src/pages/auth/__tests__/forgot-password.test.tsx">
    <testCase name="ForgotPasswordPage - renders the form correctly" duration="230" />
    <testCase name="ForgotPasswordPage - submits the form with a valid email" duration="206" />
  </file>
  <file path="src/pages/auth/__tests__/register.test.tsx">
    <testCase name="RegisterPage - renders the registration form" duration="268" />
    <testCase name="RegisterPage - shows validation errors for invalid data" duration="87" />
    <testCase name="RegisterPage - submits the form with valid data" duration="85" />
    <testCase name="RegisterPage - toggles password visibility" duration="35" />
  </file>
  <file path="src/pages/user/__tests__/settings.test.tsx">
    <testCase name="SettingsPage - affiche le titre" duration="103" />
  </file>
  <file path="src/store/__tests__/cart-store.test.ts">
    <testCase name="Cart Store - should add an item to the cart" duration="2" />
    <testCase name="Cart Store - should increase quantity when adding the same item" duration="1" />
    <testCase name="Cart Store - should remove an item from the cart" duration="0" />
    <testCase name="Cart Store - should update item quantity" duration="1" />
    <testCase name="Cart Store - should clear the cart" duration="0" />
    <testCase name="Cart Store - adds item to cart" duration="1" />
  </file>
</testExecutions>